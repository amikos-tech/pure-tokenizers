name: Rust CI

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/rust-ci.yml'
      - '.github/actions/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/rust-ci.yml'
      - '.github/actions/**'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  rust-test:
    name: Rust Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: ./.github/actions/setup-rust
      with:
        components: rustfmt, clippy

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Run Rust tests
      run: cargo test --verbose

    - name: Build library
      run: cargo build --release

  cross-compile:
    name: Cross compile ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux GNU targets
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

          # Linux MUSL targets
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest

          # macOS targets
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

          # Windows targets
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: ./.github/actions/setup-rust
      with:
        targets: ${{ matrix.target }}
        cache-key-suffix: ${{ matrix.target }}

    - name: Setup cross-compilation
      if: matrix.os == 'ubuntu-latest'
      uses: ./.github/actions/setup-cross-compilation

    - name: Build Rust library
      uses: ./.github/actions/build-rust-library
      with:
        target: ${{ matrix.target }}
        # use-cross defaults to 'auto' which automatically uses cross on Linux
